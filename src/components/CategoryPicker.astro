---
// data imports
import * as site from "../data/site.json";

// library imports
import { getCollection, type CollectionEntry } from "astro:content";

// utils imports
import { formatBlogPosts, slugify } from "../js/utils";

const allPosts = await getCollection("blog");
const formattedPosts: CollectionEntry<"blog">[] = formatBlogPosts(allPosts);
const allCategories = formattedPosts.map((cat) => cat.data.category).flat();

// Get unique categories and sort them alphabetically
const uniqueSortedCategories = [...new Set(allCategories)].sort((a, b) =>
  a.localeCompare(b),
);

// Create the processedCats object with counts
const processedCats = uniqueSortedCategories.reduce((acc, category) => {
  // Count occurrences of each category
  const value = allCategories.filter((cat) => cat === category).length;

  return {
    ...acc,
    [category]: value,
  };
}, {});

// Log or display the count of posts in each category
// console.log("Category counts:", processedCats);

// Example: Generating output for display
const showCount = uniqueSortedCategories.map(
  (category) => `${category} (${processedCats[category]})`,
);

const { title } = Astro.props;
---

<div class="card" id="category-picker">
  <header class="card__header">
    <img
      src="/assets/images/title-bar-close.png"
      height="28"
      width="28"
      class="control close"
      alt="Close"
    />
    <div class="title">
      <h3 class="card__title">{title ?? "Mackintosh HD"}</h3>
      <span class="icon hd">&nbsp;</span>
    </div>
    <img
      src="/assets/images/title-bar-expand.png"
      height="28"
      width="28"
      class="control expand"
    />
    <img
      src="/assets/images/title-bar-collapse.png"
      height="28"
      width="28"
      class="control collapse"
    />
    <a href="#" class="button">&nbsp;</a>
  </header>

  <section class="card__content">
    <article>
      <ul class="picker categories">
        <li>
          <a class="badge" href="/blog"
            ><span class="icon">&nbsp;</span>All Blog Articles</a>
        </li>
        {
          Object.entries(processedCats).map(([key, val]) => (
            <li>
              <a class="badge" href={`/category/${slugify(key)}/`}>
                <span class={`icon ${slugify(key)}`}>&nbsp;</span>
                {key} {showCount && `(${val})`}
              </a>
            </li>
          ))
        }
      </ul>
    </article>
  </section>
</div>

<style>
  #category-picker {
    width: max(95%, 50%);
  }
  .control {
    opacity: 0;
  }
  .control.close {
    opacity: 1;
  }
  .card .card__content {
    display: block;
    padding-bottom: 1rem;
  }
  .card .card__content article {
    padding: 0 !important;
  }
</style>
