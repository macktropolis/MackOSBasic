---
// library imports
import { Image } from "astro:assets";

// utils imports
import { slugify, formatDate } from "../js/utils";

const { relatedPosts } = Astro.props;
const tags = relatedPosts.map((post) => post.data.tags).flat();
const uniqueTags = [...new Set(tags)];
---

<aside class="related">
{
  relatedPosts.map((post) => (
    <div class="card__wrapper">
      <div class="card post">
        <header class="card__header">
            <img src="/assets/images/title-bar-close.png" height="28" width="28" class="control close" alt="Close">
            <div class="title">
              <h3 class="card__title">
                More from {post.data.category}...
              </h3>
              <span class={`icon ${slugify(post.data.category)}`}>&nbsp;</span>
            </div>
            <img src="/assets/images/title-bar-expand.png" height="28" width="28" class="control expand">
            <img src="/assets/images/title-bar-collapse.png" height="28" width="28" class="control collapse">
        </header>

        <section class="card__content">
          <article>
            <section class="hero-image">
            <a href={`/blog/${post.slug}/`} aria-hidden="true" tabindex="-1">
            <svg xmlns='http://www.w3.org/2000/svg'>
        
            <filter id='noiseFilter'>
                <feTurbulence 
                type='fractalNoise' 
                baseFrequency='0.65' 
                numOctaves='3' 
                stitchTiles='stitch' />
            </filter>
        
            <rect
                width='100%' 
                height='100%' 
                filter='url(#noiseFilter)' />
            </svg>
                <Image
                src={post.data.image.src}
                alt={post.data.image.alt}
                width="400"
                height="250"
                format="webp"
                quality={80}
                />
          </a>
        </section>

        <h1>
          <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
        </h1>
        
        <p>{post.data.description}</p>

        <a href={`/blog/${post.slug}/`} class="button">Read More</a>

        {
          uniqueTags && (
            <div class="tag-cloud">
              <small>Tags:</small>
              <ul class="tags">
                {uniqueTags.map((tag) => (
                  <li>
                    <a
                      href={`/tags/${slugify(tag)}`}
                      aria-hidden="true"
                      tabindex="-1">
                      {tag}
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          )
        }

      </article>
      <section class="card__meta">
        <p>
          <!-- <a href={`/category/${slugify(post.data.category)}/`} class="badge">{post.data.category}</a> 
          &bull; -->
          <a href={`/author/${slugify(post.data.author)}/`}>{post.data.author}</a>
          &bull;
          Posted: {formatDate(post.data.date)}
        </p>
      </section>
    </section>
  </div>
</div>
  ))
}
</aside>
<style>
  .hero-image {
    max-height: 200px;
  }
  .close {
    opacity: 0;
  }
</style>