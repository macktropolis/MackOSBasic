---
// library imports
import { getCollection, type CollectionEntry } from "astro:content";

// data imports
// import * as site from "../../data/site.json";

// layout imports
import Layout from "../../layouts/Layout.astro";

// component imports
import Hero from "../../components/SectionHeader.astro";
import Categories from "../../components/CategoryPicker.astro";
import PostCard from "../../components/PostCard.astro";

// utils imports
import { slugify, formatBlogPosts } from "../../js/utils";

// export formatted blog posts by category
export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const formattedPosts: CollectionEntry<"blog">[] = formatBlogPosts(allPosts);
  const allCategories = [
    ...new Set(formattedPosts.map((post) => post.data.category).flat()),
  ];
  return allCategories.map((category) => {
    const categoryPosts = formattedPosts.filter(
      (post) => post.data.category === category,
    );
    return {
      params: { category: slugify(category) },
      props: {
        categoryName: category,
        posts: categoryPosts,
      },
    };
  });
}

interface Props {
  posts: CollectionEntry<"blog">[];
  categoryName: string;
  title?: string;
  description?: string;
}

const { category } = Astro.params;
const { posts, categoryName } = Astro.props;
const headerTitle = "Files";
const categoryTitle = "More Article Categories";
const title = "Blog Articles";
const description = "Articles in the '" + categoryName + "' category";
const categorySlug = slugify(categoryName);
---

<Layout title={title} page={categoryName} categorySlug={categorySlug}>
  <Hero headerTitle={headerTitle} title={title} description={description} />
  <main>
    <!-- <Hero title={title} /> -->
    <Categories title={categoryTitle} />
    {
      posts.map((post) => (
        <PostCard data={post.data} url={post.slug} tagType="h2" />
      ))
    }
  </main>
</Layout>
